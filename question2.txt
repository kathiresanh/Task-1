2. Difference between HTTP1.1 vs HTTP2
  
    Answer:

    1.HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it.
   
    2.HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource.
   
    3.HTTP/2 can send multiple requests for data in parallel over a single TCP connection. This is the most advanced feature of the HTTP/2 protocol because it allows you to download web files asynchronously from one server.
   
    4.HTTP/2 compress a large number of redundant header frames. It uses the HPACK specification as a simple and secure approach to header compression. Both          client and server maintain a list of headers used in previous client-server requests.
      
    5. HTTP1.x used to process text commands to complete request-response cycles.
  
    6. HTTP/2 will use binary commands (in 1s and 0s) to execute the same tasks. 
     
    7. Browsers using HTTP/2 implementation will convert the same text commands into binary before transmitting it over the network.
    
    8. The client saves pushed resources in the cache.

    9. The client can reuse these cached resources across different pages.

   10. The server can multiplex pushed resources along with originally requested information within the same TCP connection.

   11. The server can prioritize pushed resources — a key performance differentiator in HTTP/2 vs HTTP1.

   12. The client can decline pushed resources to maintain an effective repository of cached resources or disable Server Push entirely.

   13.The client can also limit the number of pushed streams multiplexed concurrently.
 
   14.HTTP/2 supports queries multiplexing, headers compression, priority and more intelligent packet streaming management. This results in reduced latency and       accelerates content download on modern web pages.
   
   15.HTTP/2 supports queries multiplexing, headers compression, priority and more intelligent packet streaming management. This results in reduced latency and       accelerates content download on modern web pages.